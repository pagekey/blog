{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog","text":""},{"location":"#blog","title":"Blog","text":"<p>\u00a1Bienvenidos a PageKey en Espa\u00f1ol!</p>"},{"location":"tags/","title":"Etiquetas","text":""},{"location":"tags/#etiquetas","title":"Etiquetas","text":""},{"location":"tags/#c","title":"c","text":"<ul> <li>OS21: M\u00e1s PCI + Empezando con Almacenamiento (IDE, SATA)</li> </ul>"},{"location":"tags/#javascript","title":"javascript","text":"<ul> <li>Primera Aplicaci\u00f3n Web con Flask</li> <li>\u00bf\u00bfFlask se encuentra con html??</li> <li>Fijamos Errores, Ponemos Estilo</li> <li>5 Lecciones de 4 Reescrituras de mi Aplicaci\u00f3n de Idiomas | Boom DevLog 9</li> </ul>"},{"location":"tags/#language","title":"language","text":"<ul> <li>5 Lecciones de 4 Reescrituras de mi Aplicaci\u00f3n de Idiomas | Boom DevLog 9</li> </ul>"},{"location":"tags/#python","title":"python","text":"<ul> <li>Descargamos una P\u00e1gina Web con Python</li> <li>Usamos una API Para Saber Mi Edad</li> <li>Terminamos Nuestra Aplication Terminal</li> <li>Primera Aplicaci\u00f3n Web con Flask</li> <li>\u00bf\u00bfFlask se encuentra con html??</li> <li>Finalmente tenemos los datos de la API</li> <li>Fijamos Errores, Ponemos Estilo</li> </ul>"},{"location":"codigo-1/","title":"Introducci\u00f3n","text":"<p>Hola a todos, soy Steve y hoy \u00a1comienzo un viaje de hacer videos en espa\u00f1ol!</p> <p></p> <p>Intento publicar un video nuevo cada d\u00eda si puedo, pero hay tanto que hacer, que no s\u00e9 si lo realizar\u00e9. Pero ten paciencia conmigo - juntos, podemos alcanzar esta meta de cien d\u00edas.</p> <p>Profesionalmente, soy ingeniero de software, y por eso quiero compartir lo que he aprendido tan lejos en mi carrera con lo quien interesa y quiere seguir un camino similar. No s\u00e9 mucho, hay tantas personas que saben m\u00e1s y tienen m\u00e1s talento que m\u00ed, pero te puedo dar lo que tengo y nada m\u00e1s :)</p> <p>Espero que disfrutes de mi nuevo experimento - este canal.</p> <p>\u00a1Activa los subt\u00edtulos para ver las correcciones gramaticales!</p>"},{"location":"codigo-2/","title":"Noticias de la Pandemia e Inteligencia Artificial","text":"<p>Hola amigos, hoy leemos un articulo sobre los efectos de la pand\u00e9mia, y lo relacionamos a algo que podemos hacer nosotros mismos, sin equipamiento especial - aprender sobre el aprendizaje autom\u00e1tico con Python.</p> <p></p> <p>Lo siento si este video es aburrido - como dije en el ultimo video, simplemente estoy experimentando para encontrar la mejor forma de video</p>"},{"location":"codigo-3/","title":"Descargamos una P\u00e1gina Web con Python","text":"<p>Hola a todos. En este video, tratamos de descargar los titulares de Google Noticias automaticamente. No lo logramos hacer, por lo menos para este video, pero todavia vemos c\u00f3mo se puede descargar el c\u00f3digo fuente de una p\u00e1gina web usando Python. Tambien instalamos el paquete \"requests\" con pip, el administrator de paquetes m\u00e1s popular de Python.</p> <p></p>","tags":["python"]},{"location":"codigo-4/","title":"Usamos una API Para Saber Mi Edad","text":"<p>Hola amigos. Hoy usamos un API que se llama Agify. Se usa eso para predicar la edad de una persona, por proveer su nombre. Empezamos a implementar una aplicaci\u00f3n de Python que da una interfaz de usuario en la ventana terminal.</p> <p></p>","tags":["python"]},{"location":"codigo-5/","title":"Terminamos Nuestra Aplication Terminal","text":"<p>Hoy finalmente terminamos nuestra aplicaci\u00f3n terminal. No es tan impresionante, pero funciona bien y nos ha ense\u00f1ado c\u00f3mo usar un API y imprimir informaci\u00f3n en la terminal muy bien. \u00a1Ma\u00f1ana empezamos nuestra aplicaci\u00f3n web!</p> <p></p>","tags":["python"]},{"location":"codigo-6/","title":"Primera Aplicaci\u00f3n Web con Flask","text":"<p>En este video, hacemos un servidor muy simple usando Flask. En los pr\u00f3ximos videos, hay mucho m\u00e1s que podemos hacer con \u00e9l.</p> <p></p>","tags":["javascript","python"]},{"location":"codigo-7/","title":"\u00bf\u00bfFlask se encuentra con html??","text":"<p>Hola, en este video haremos nuestra primera p\u00e1gina HTML con el servido Flask del video anterior (una plantilla).</p> <p>Nota que dije \"templado\" cu\u00e1ndo quer\u00eda decir \"plantilla\" \ud83d\ude01\ufe0f</p> <p></p>","tags":["javascript","python"]},{"location":"codigo-8/","title":"Finalmente tenemos los datos de la API","text":"<p>Es el octavo d\u00eda de subir videos de programaci\u00f3n en espa\u00f1ol, y finalmente tenemos datos de la API Agify en nuestra aplicaci\u00f3n web Flask. Hicimos una interfaz muy simple y ahora obtenemos un resultado usando la informaci\u00f3n que provee el usuario.</p> <p></p>","tags":["python"]},{"location":"codigo-9/","title":"Fijamos Errores, Ponemos Estilo","text":"<p>En este video fijamos unos errores con nuestro c\u00f3digo JavaScript, para estar seguro que el usuario entre valores v\u00e1lides. Tambi\u00e9n usamos CSS para mejorar la aparencia de nuestra aplicaci\u00f3n web.</p> <p>Lo siento por este video - mi auto-editor a veces cortaba demasiado audio.</p> <p></p>","tags":["javascript","python"]},{"location":"boom-devlog-9/","title":"5 Lecciones de 4 Reescrituras de mi Aplicaci\u00f3n de Idiomas | Boom DevLog 9","text":"<p>Cuatro veces, desde cero.</p> <p>Eso es cu\u00e1ntas veces he reescrito mi aplicaci\u00f3n llamada Boom Languages. Cada vez que lo hice, aprend\u00ed much\u00edsimo, y en este video, voy a compartir las 5 lecciones m\u00e1s valiosas que he aprendido en el camino.</p> <p></p> <p>\u00a1Aseg\u00farate de registrarte para recibir una notificaci\u00f3n cuando la \u00faltima versi\u00f3n de Boom est\u00e9 disponible!</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#1-solo-empieza","title":"1. Solo empieza.","text":"<p>Cualquier art\u00edculo enfocado en innovaci\u00f3n o emprendimiento te dir\u00e1 esto: Empieza hoy, porque si lo retrasas hasta ma\u00f1ana, entonces ma\u00f1ana nunca llegar\u00e1. He le\u00eddo este consejo muchas veces, y cuando finalmente lo apliqu\u00e9 a mi aplicaci\u00f3n para aprender idiomas, el consejo result\u00f3 cierto.</p> <p>Uno puede pasarse toda la vida prepar\u00e1ndose, pero la realidad es que muchas de las lecciones que necesitas solo se aprenden en el camino. Tienes que lanzarte, incluso si estuvieras completamente desprevenido o carecieras de habilidades clave. Los aprender\u00e1s a medida que avances.</p> <p>Para m\u00ed, esto implic\u00f3 crear un plan aproximado para mi aplicaci\u00f3n, abrir un editor de c\u00f3digo, y escribir esos golpes de teclado fat\u00eddicos: <code>git init</code>. Si no hubiera hecho ese commit inicial finalmente el 28 de noviembre de 2020, los cientos que lo siguieron podr\u00edan nunca haber llegado a pasar.</p> <p>Hasta ahora, he creado cuatro versiones de esta aplicaci\u00f3n:</p> <ul> <li>La Versi\u00f3n 1 fue s\u00f3lo para demostrar que pod\u00eda publicar una aplicaci\u00f3n en las tiendas de aplicaciones de iOS y Android. No hab\u00eda nada especial en ello; ten\u00eda una funci\u00f3n de pruebas, pero casi todas las otras aplicaciones principales de aprendizaje de idiomas la tienen tambi\u00e9n.</li> <li>La versi\u00f3n 2 agreg\u00f3 una funci\u00f3n que se convertir\u00eda en clave: el traductor de art\u00edculos. Es una herramienta que te permite descomponer un gran y denso cuerpo de texto intimidante, escrito en un idioma extranjero, en piezas manejables (oraciones) para que puedas avanzar sin sentirte abrumado.</li> <li>La versi\u00f3n 3 era exactamente la misma aplicaci\u00f3n, pero reescrita desde cero (usando React Native en lugar de Flutter).</li> <li>Y ahora estoy trabajando en la Versi\u00f3n 4, que es otra reescritura completa desde cero.</li> </ul> <p>Pero si nunca hubiera intentado, todav\u00eda estar\u00eda sin hacer nada, pensando en la siguiente gran idea.</p> <p>\u00bfCurioso por probar la nueva versi\u00f3n? Puedes registrarte aqu\u00ed para recibir una notificaci\u00f3n cuando est\u00e9 disponible. \u00a1Incluso hay una posibilidad de que seas seleccionado como un tester privado exclusivo!</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#2-no-se-trata-solo-de-la-idea","title":"2. No se trata solo de la idea.","text":"<p>Otro consejo cl\u00e1sico para emprendedores proviene de Derek Sivers, quien introdujo la idea de que las ideas son un multiplicador de la ejecuci\u00f3n. B\u00e1sicamente, esto significa que la forma en que ejecutas una idea tiene mucho m\u00e1s impacto en si tienes \u00e9xito que la idea en s\u00ed misma. Esto sin mencionar que practicar tus habilidades para ejecutar ideas te hace mejor en ello, de manera que cuando otra \"idea millonaria\" llegue flotando en tu cabeza, estar\u00e1s listo y capacitado para convertirla en realidad.</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#3-no-simplemente-lances-tu-idea","title":"3. No simplemente lances tu idea.","text":"<p>Me inspir\u00f3 profundamente el libro de Seth Godin \"Linchpin\". Uno de mis principales aprendizajes de ese libro fue el concepto de \"lanzarla\". \u00c9l dice que si no \"lanzas\" tus ideas y las pones a disposici\u00f3n del mundo, entonces todo el trabajo que les has dedicado es esencialmente in\u00fatil. Las ideas necesitan interactuar con el mundo para crecer y convertirse en algo valioso, y no pueden hacerlo hasta que presiones el bot\u00f3n de publicar. Al principio, abrac\u00e9 esto completamente, pero con el tiempo, me di cuenta de que la verdad es un poco m\u00e1s matizada de lo que parec\u00eda.</p> <p>Cuando era joven, era un poco perfeccionista, tomando las cosas con calma y de forma constante cuando escrib\u00eda un ensayo para la escuela o hac\u00eda la tarea, y revisando todo para asegurarme de que estuviera bien antes de entregarlo. La lectura de Linchpin me hizo cambiar mis h\u00e1bitos, de revisar cuidadosamente a simplemente enviarlo.</p> <p>Al principio, me hizo sentir inc\u00f3modo, pero eventualmente, estaba enviando cosas sin pensarlo mucho, por todas partes. \u00bfHay dificultades en un punto del v\u00eddeo que editas? \u00bfNo encuentras la palabra adecuada? No hay problema, solo publ\u00edcalo y pasa al siguiente. \u00bfTe quedaste atascado en un problema de programaci\u00f3n? Haz la soluci\u00f3n f\u00e1cil y desordenada y pasa al siguiente problema.</p> <p>Me propuse metas que se centraban en la finalizaci\u00f3n en lugar del esfuerzo o la calidad. Algunos ejemplos incluyeron trabajar en Boom durante cierta cantidad de tiempo cada d\u00eda, o producir un video de YouTube cada semana sobre un tema t\u00e9cnico.</p> <p>Llev\u00e1ndolo al siguiente extremo, en enero de 2023, me desafi\u00e9 a hacer un video de YouTube todos los d\u00edas. Pude mantenerlo durante m\u00e1s de un mes, pero al final, estaba completamente agotado, y confundido sobre por qu\u00e9 gast\u00e9 tanto tiempo, haciendo videos de tan baja calidad. Estaba cortando esquinas solo para cumplir con mi cuota diaria de \"publicaci\u00f3n\".</p> <p>Fue en ese momento que jur\u00e9 volver a una \u00e9poca anterior, antes de las m\u00e9tricas, antes de la cultura del \"grindset\", antes de \"publicar\", antes de la cantidad, y me di cuenta de que necesitaba centrarme en la calidad. Cuando reci\u00e9n est\u00e1s comenzando, puede ser genial agitarse salvajemente, probar las aguas, y hacer explotar algunas naves espaciales en el camino. Pero este enfoque tiene sus l\u00edmites, y he decidido balancear el p\u00e9ndulo en la otra direcci\u00f3n, al menos para m\u00ed, por ahora.</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#4-comience-con-lo-mas-importante","title":"4. Comience con lo m\u00e1s importante.","text":"<p>Cuando una aplicaci\u00f3n tiene un servidor, es mucho m\u00e1s complicado que cu\u00e1ndo todo sucede localmente. Tienes que preocuparte por migrar tu base de datos, mantener un esquema y mantener sincronizada la API entre el cliente y el servidor. Incluso hay m\u00e1s dolores de cabeza cuando intentas implementarlo en dispositivos m\u00f3viles, tienes que complacer a Apple (como vimos en el \u00faltimo devlog).</p> <p>Y encima de todo esto, estaba agregando funciones que no importaban (como inicio de sesi\u00f3n de usuario y tablas de clasificaci\u00f3n) antes de encontrar un conjunto central de caracter\u00edsticas que ense\u00f1aban efectivamente idiomas extranjeros y que eran divertidas y f\u00e1ciles de usar. Cuando intent\u00e9 implementar funciones que realmente importaban, me encontr\u00e9 enterrado bajo una monta\u00f1a de deuda t\u00e9cnica y me  decid\u00ed comenzar de nuevo.</p> <p>Esta vez, sin embargo, me concentrar\u00eda primero en las caracter\u00edsticas que importaban, y dejar\u00eda todo lo que no estuviera directamente relacionado con ellas. Si hab\u00eda una esquina que pudiera recortar, lo har\u00eda para poder construir las caracter\u00edsticas principales m\u00e1s r\u00e1pido y mejor. Si no era una caracter\u00edstica principal, lo ignorar\u00eda.</p> <p>Esto llev\u00f3 al enfoque de tipo radical de construir la aplicaci\u00f3n como un sitio web simple que utiliza el <code>localStorage</code> incorporado del navegador en lugar de depender de un servidor. Con este enfoque \u00e1gil, pude prototipar en un solo un fin de semana todas las caracter\u00edsticas importantes de la aplicaci\u00f3n principal, las cuales me llevaron meses para construir la primera vez.</p> <p>Las limitaciones de este enfoque son inmensas, pero la velocidad con la que pude iterar fue invaluable. Docenas de veces borr\u00e9 el <code>localStorage</code> de mi navegador y comenc\u00e9 de nuevo con un nuevo esquema. Si tuviera que hacer estos cambios en una aplicaci\u00f3n de producci\u00f3n, tendr\u00eda que preocuparme por migrar los datos de los usuarios, cambiar el esquema, y todo tipo de otras preo cupaciones minuciosas.</p> <p>Cuando yo soy el \u00fanico usuario y comienzo desde cero, no tengo que preocuparme por arruinar nada - simplemente puedo hacerlo.</p> <p>Este enfoque r\u00e1pido y suelto parece contradecir mi punto sobre \"calidad sobre cantidad\", pero no creo que lo haga. El punto clave aqu\u00ed es que no estoy publicando este prototipo sin pulir para que todos lo usen. En cambio, lo uso como una forma de descubrir las caracter\u00edsticas y el dise\u00f1o de la aplicaci\u00f3n que son m\u00e1s efectivos, invirtiendo la menor cantidad de tiempo posible en ello. Probablemente descartar\u00e9 este c\u00f3digo de prototipo desordenado eventualmente, pero por ahora, sirve para el prop\u00f3sito.</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#5-haz-un-lanzamiento-adecuado","title":"5. Haz un lanzamiento adecuado.","text":"<p>La iteraci\u00f3n es genial, pero la persona promedio que intenta usar una aplicaci\u00f3n se ir\u00e1 despu\u00e9s de 2 segundos si no est\u00e1 comprometida, y nunca volver\u00e1. Y eso es solo si el dise\u00f1o es feo. Si un bot\u00f3n no hace lo que se supone que debe hacer, o si aparece un error y no hay una forma obvia de solucionarlo, olv\u00eddalo. Se han ido, y no volver\u00e1n.</p> <p>En el pasado, quer\u00eda tener la versi\u00f3n m\u00e1s reciente y avanzada de mi aplicaci\u00f3n disponible para todo el mundo. B\u00e1sicamente estaba diciendo, \"\u00a1Miren todos, estoy construyendo algo! No est\u00e1 terminado, pero pru\u00e9benlo y vean lo incompleto que est\u00e1!\" Pensaba que era una p\u00e9rdida de tiempo y esfuerzo crear una marca para un producto que a\u00fan no estaba listo.</p> <p>Construir una lista de personas entusiasmadas por usar algo que a\u00fan no exist\u00eda me parec\u00eda pretencioso. Solo quer\u00eda mostrar lo que se hab\u00eda hecho hasta ahora y obtener retroalimentaci\u00f3n. No hay necesidad de ocultar nada, \u00bfverdad? Desde la perspectiva de un ingeniero, esto es l\u00f3gico, pero es una mala estrategia de marketing. El mensaje que se env\u00eda es que no tenemos problema en lanzar algo que no funciona. </p> <p>Es por eso que esta vez voy a limitar severamente el n\u00famero de personas  que tienen acceso a la \u00faltima versi\u00f3n de Boom. Incluso podr\u00eda quitar la versi\u00f3n anterior de la tienda de aplicaciones. Todav\u00eda documentar\u00e9 el proceso y compartir\u00e9 lo que yo aprenda, pero hasta que tenga algo que est\u00e9 seguro es impresionante y \u00fatil para los estudiantes de idiomas, lo mantendr\u00e9 en secreto.</p> <p>Siempre aprendo mucho observando a familiares o amigos que prueban mi aplicaci\u00f3n. Es por eso que voy a observar por encima del hombro cuando pueda, y de lo contrario, evitar\u00e9 que la gente sufra tratando de usar algo  que no funciona.</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#demo-prototipo-de-la-version-4","title":"Demo: Prototipo de la Versi\u00f3n 4","text":"<p>Si quieres ver una demostraci\u00f3n del prototipo que contru\u00ed para Boom v4, ve el video que acompa\u00f1a este art\u00edculo. La demostraci\u00f3n comience a los 12:08.</p>","tags":["javascript","language"]},{"location":"boom-devlog-9/#lo-que-sigue","title":"Lo que sigue","text":"<p>Entonces, \u00bfqu\u00e9 sigue para esta aplicaci\u00f3n Boom?</p> <p>Hay cuatro elementos simples en mi plan a medida que avanzo:</p> <ol> <li> <p>Construir algo que yopersonalmente quiera usar todos los d\u00edas para aprender idiomas. Esto se centrar\u00e1 en agregar caracter\u00edsticas que encuentro \u00fatiles, y que de todas formas realizo a trav\u00e9s de otros medios. Quiero que Boom sea una soluci\u00f3n integrada, para que no tengas que saltar entre pesta\u00f1as de Google Translate, sesiones de revisi\u00f3n de Anki y videos aleatorios de YouTube para progresar en tu viaje del lenguaje.</p> </li> <li> <p>Involucrar a otros. Haz que algunas personas lo usen y haz que ellos tambi\u00e9n quieran usarlo todos los d\u00edas. Esto puede suceder al mismo tiempo que el paso anterior. Trabajar\u00e9 con unos pocos seleccionados para ver c\u00f3mo responden a la aplicaci\u00f3n. Esto me ayudar\u00e1 a descubrir cuestiones de usabilidad que surgen de ser la \u00fanica persona que escribi\u00f3 todo el c\u00f3digo. Cuando no puedes simplemente abrir el c\u00f3digo y explorar su interior para ver qu\u00e9 est\u00e1 mal,las cosas definitivamente parecen diferentes. As\u00ed que estoy interesado en entender esa perspectiva.</p> </li> </ol> <p>\u00a1Escala! Cuando se completen los pasos anteriores, tendr\u00e9 un concepto de prueba de calidad razonablemente alto de un sistema de aprendizaje \u00fatil y funcional. Luego ser\u00e1 hora de llevar ese producto potencialmente \u00fatil a las manos de la mayor cantidad de personas posible. No tengo habilidades en ventas o marketing (a\u00fan) pero espero que si comienzo, pueda alcanzar el \u00e9xito a trav\u00e9s del fracaso como lo hice al construir esta aplicaci\u00f3n. Por supuesto, ser\u00eda mucho m\u00e1s f\u00e1cil si tuviera a alguien con conocimientos comerciales para trabajar juntos - si est\u00e1s interesado, env\u00edame un correo electr\u00f3nico!</p> <p>Monetizar. Una vez que suficientes personas usen la aplicaci\u00f3n y las caracter\u00edsticas sean estables, podremos buscar formas de ganar dinero con esta aplicaci\u00f3n y convertirla en un negocio sostenible. He investigado sobre compras dentro de la aplicaci\u00f3n, modelos de suscripci\u00f3n y licencias, pero tengo mucho m\u00e1s que aprender. Este es otro lugar donde probablemente necesitar\u00e9 ayuda de personas inteligentes con buen conocimiento empresarial y buena \u00e9tica.</p> <p>As\u00ed que eso es todo para este derrame cerebral de Boom Languages. Espero que hayas obtenido algo \u00fatil de las lecciones que compart\u00ed. Si deseas recibir actualizaciones a medida que hago progresos, puedes suscribirte a la lista de correo para recibir notificaciones cuando haya nuevas versiones disponibles, y suscribirte al canal de YouTube de PageKey Espa\u00f1ol para estar informado cuando publiquemos nuevos videos. \u00a1Gracias por leer!</p>","tags":["javascript","language"]},{"location":"pkos-21/","title":"OS21: M\u00e1s PCI + Empezando con Almacenamiento (IDE, SATA)","text":"<p>Todo nuestro mundo funciona con computadoras, pero pocos entienden c\u00f3mo funcionan las computadoras a nivel m\u00e1s b\u00e1sico. Todo, desde tu tel\u00e9fono y tu computadora port\u00e1til hasta los controladores de vuelo en un avi\u00f3n, contiene al menos un chip llamado CPU, que le indica qu\u00e9 hacer.</p> <p></p> <p>Se supone que el sistema operativo debe encargarse de todas las operaciones a nivel bajo, incluyendo la interfaz con hardware. Pero \u00bfc\u00f3mo se ve esa interfaz en realidad? Es bastante sencillo escribir un archivo utilizando <code>file.write()</code> en Python, pero esto solo es una abstracci\u00f3n de lo que realmente ocurre. En alg\u00fan lugar, bajo capas y capas de abstracci\u00f3n, hay un disco met\u00e1lico girando o una unidad de estado s\u00f3lido, y est\u00e1s reorganizando ceros y unos en ese disco.</p> <p>En esta serie, desechamos todas esas abstracciones c\u00f3modas que nos son proporcionadas y realizamos programaci\u00f3n a nivel de hardware (bare-metal). Nuestro c\u00f3digo ejecuta directamente en el procesador - no hay biblioteca est\u00e1ndar, no hay llamadas al sistema, no existe API aparte del propio procesador. Si te emociona la idea de lograr que las cosas suceden solamente con el procesador y nada m\u00e1s, entonces esta serie es para t\u00ed.</p> <p>PKOS significa PageKey Operating System, que es un sistema operativo construido desde cero, en video, con cada lecci\u00f3n aprendida en el camino explicada para que puedas endenderlo f\u00e1cilmente y aplicar lo que aprendes a tus propios proyectos.</p> <p>En esta lecci\u00f3n, continuaremos nuesta exploraci\u00f3n de PCI, limpiaremos un poco el c\u00f3digo, intentaremos (sin \u00e9xito) utilizar Rust, y comenzaremos a investigar c\u00f3mo escribir un controlador de dispositivos de almacenamiento.</p>","tags":["c"]},{"location":"pkos-21/#lo-que-hicimos","title":"Lo Que Hicimos","text":"<p>Aqu\u00ed hay un breve resumen de lo que logramos desde el \u00faltimo video. Las adiciones ma\u015b importantes se ampliar\u00e1n en la secci\u00f3n de Inmersiones Profundas a continuaci\u00f3n.</p> <ul> <li>Significativamente refinamos <code>pci.c</code><ul> <li>Agregamos <code>struct PCI_Device</code></li> </ul> </li> <li>Mejoras de C\u00f3digo<ul> <li>Llamadas \"int-to-string\" m\u00e1s f\u00e1ciles</li> <li>Envoltura de pantalla</li> </ul> </li> <li>Mision secundaria de Rust: infructuoso</li> <li>Investigamos los controladores IDE</li> <li>Investigamos los controladores SATA</li> <li>Adjuntamos un dispositivo SATA a QEMU</li> </ul>","tags":["c"]},{"location":"pkos-21/#lecciones-aprendidas","title":"Lecciones Aprendidas","text":"<p>Hacer el c\u00f3digo para este video produjo un mont\u00f3n de grandes lecciones. Esto es lo que encontr\u00e9:</p>","tags":["c"]},{"location":"pkos-21/#las-estructuras-son-maravillosas","title":"Las estructuras son maravillosas","text":"<p>Estaba procrastinando en implementar una estructura para almacenar los datos del dispositivo PCI que estaba tomando de la memoria de configuraci\u00f3n, pero me sorprendi\u00f3 lo f\u00e1cil que fue hacerlo y lo m\u00e1s ordenado que qued\u00f3 el c\u00f3digo cuando lo hice. Solo mira esta encatadora estructura:</p> <pre><code>struct PCI_Device {\n    u16 vendor_id;\n    u16 device_id;\n    u8 base_class;\n    u8 sub_class;\n    u8 prog_interface;\n    u16 command;\n    u16 status;\n};\n</code></pre> <p>Con esto, logr\u00e9 abstraer todo el bitshifting que se requer\u00eda para obtener estos datos de la memoria de configuraci\u00f3n PCI y simplemente devolver el objeto completo. Esto hizo que la implementaci\u00f3n de <code>lspci()</code> sea mucho m\u00e1s limpia y f\u00e1cil de leer, y evitar\u00e1 la duplicaci\u00f3n de c\u00f3digo cu\u00e1ndo escribamos el controlador del dispositivo de almacenamiento.</p>","tags":["c"]},{"location":"pkos-21/#clase-y-subclase-pci-identificar-la-funcion-del-dispositivo","title":"Clase y subclase PCI: Identificar la funci\u00f3n del dispositivo","text":"<p>Cada dispositivo PCI tiene una identificaci\u00f3n de proveedor y de dispositivo, y se puede usar estes dos n\u00fameros para buscar exactamente qu\u00e9 dispositivo es - simplemente escr\u00edbelo en www.pcilookup.com \u00a1y ve lo que sucede!</p>","tags":["c"]},{"location":"pkos-21/#la-compatibilidad-con-rust-de-bare-metal-i686-es-dudosa","title":"La compatibilidad con Rust de bare-metal i686 es dudosa","text":"<p>Me entristeci\u00f3 descubrir que x86 de 32 bits, tambi\u00e9n conocido como i386 o i686, no tiene buen soporte en Rust para la programaci\u00f3n de nivel hardware. No existe una cadena de herramientas <code>i686-unknown-none</code> predeterminada, lo que significa que debes definir la tuya basada en <code>i686-unknown-linux-gnu</code>. Hice lo mejor que pude, pero no pude compilar un kernel de multiboot.</p> <p>Me encantar\u00eda utilizar Rust si lo pudiera entenderlo, pero no estaba destinado para este episodio - por ahora nos ce\u00f1iremos a la simplicidad de C.</p>","tags":["c"]},{"location":"pkos-21/#los-controladores-de-almacenamiento-ide-pata-y-ahci-sata-son-muy-diferentes","title":"Los controladores de almacenamiento: IDE (PATA) y AHCI (SATA) son muy diferentes","text":"<p>Pas\u00e9 bastante tiempo tratando de hacer funcionar el controlador IDE que se adjunt\u00f3 por defecto a QEMU. No estoy seguro si era lo que necesitaba - parec\u00eda ser una unidad de CD-ROM.</p> <p>Seg\u00fan lo que pude recopilar, IDE/PATA ya no se utiliza para unidades de disco duro, pero a\u00fan puede utilizarse para CDs. Por otro lado, SATA/AHCI siguen siendo muy relevantes. Consulte las inmersiones profundas a continuaci\u00f3n para m\u00e1s informaci\u00f3n sobre estas tecnolog\u00edas.</p>","tags":["c"]},{"location":"pkos-21/#inmerciones-profundas","title":"Inmerciones profundas","text":"<p>Vamos a sumergirnos en los detalles del c\u00f3digo para este episodio.</p>","tags":["c"]},{"location":"pkos-21/#analizando-los-campos-pci-en-una-estructura","title":"Analizando los campos PCI en una estructura","text":"<p>El dise\u00f1o de la memoria de configuraci\u00f3n PCI fue esencial para averiguar c\u00f3mo analizar los campos:</p> <p></p> <p>Recuerda que tenemos a nuestra disposici\u00f3n una funci\u00f3n operativa <code>read_pci_port</code>, y toma cuatro argumentos de un byte: <code>bus</code>, <code>slot</code>, <code>function</code>, y <code>offset</code>. Para cualquier dispositivo PCI, se puede hacer m\u00faltiples llamadas a esta funci\u00f3n, cambiando el valor de <code>offset</code> para capturar las variables que queremos fuera de la estructura que se ve en la foto. Por ejemplo, aqu\u00ed hay un fragmento de c\u00f3digo que ilustra c\u00f3mo obtenemos las identificaciones de proveedor y dispositivo:</p> <pre><code>struct PCI_Device device;\nu32 pci_data = read_pci_port(bus, slot, function, 0);\ndevice.vendor_id = pci_data &amp; 0xffff;\ndevice.device_id = (pci_data &gt;&gt; 16) &amp; 0xffff;\n</code></pre> <p>Como puedes ver, leemos 32 bits en el desplazamiento 0, luego hacemos operaciones de bitshift/AND para aislar los campos que necesitamos.</p> <p>Mira este primer vistazo al m\u00e9todo <code>lspci</code>:</p> <p></p> <p>\u00a1Se ve genial! El \u00fanico problema es que hay bastantes dispositivos con ID de proveedor \"pppp\". Eso no puede ser correcto - entonces \u00bfqu\u00e9 est\u00e1 pasando aqu\u00ed? Bueno...</p>","tags":["c"]},{"location":"pkos-21/#ignorando-dispositivos-pci-inexistentes","title":"Ignorando dispositivos PCI inexistentes","text":"<p>El kernel de Linux encuentra dispositivos por verificar si el campo PCI de clase est\u00e1 configurado en <code>0xFFFFFFFF</code> [1]. OSDev menciona que tambien se puede comprobar si la identificai\u00f3n de proveedor est\u00e1 configurado en <code>0xFFFF</code> [2]. Aunque ambas t\u00e9cnicas probablamente funcionen, opt\u00e9 por la \u00faltima t\u00e9cnica. Aplicar este conocimiento le ahorrar\u00e1 trabajo a nuestra funci\u00f3n <code>lspci()</code> al omitir procesamiento adicional cuando detecte un dispositivo inexistente:</p> <pre><code>struct PCI_Device device = get_pci_device(i, j, k);\nif (device.vendor_id == 0xFFFF) {\n    continue;\n}\n</code></pre> <p>\u00a1Ahora solo vemos dispositivos con valores v\u00e1lidas para el campo de ID de proveedor!</p> <p></p>","tags":["c"]},{"location":"pkos-21/#buscando-dispositivos-pci","title":"Buscando dispositivos PCI","text":"<p>Al observar la captura de pantalla anterior, \u00bfcu\u00e1nto puedes deducir acerca de los dispositivos enumerados? Al principio, no ten\u00eda idea de por d\u00f3nde empezar en descifrar estos campos. Sin embargo, una b\u00fasqueda r\u00e1pida me mostr\u00f3 que puedo utilizar pcilookup.com para averiguar qu\u00e9 son cada uno de estos dispositivos. Por ejemplo, al buscar la ID de proveedor 8086 y el dispositivo 7010, obtengo lo siguente:</p> <p></p> <p>Esto coincide con la documentaci\u00f3n de QEMU, y con la salida de <code>info qtree</code>, por lo que parece que nuestro m\u00e9todo <code>lspci()</code> es preciso.</p>","tags":["c"]},{"location":"pkos-21/#los-campos-de-clase-base-subclase-e-interfaz-de-programacion","title":"Los campos de clase base, subclase, e interfaz de programaci\u00f3n","text":"<p>La lista de campos PCI anterior muestra un gran bloque de 3 bytes para \"C\u00f3digo de Clase,\" pero en la documentaci\u00f3n a veces se refiere al campo \"subclase,\" el cual no parec\u00eda encontrarse en ning\u00fan parte. Sin embargo, parec\u00eda ser una forma poderosa de saber con qu\u00e9 tipo de dispositivo se est\u00e1 tratando - por ejemplo, la clase 1 indica un dispositivo de almacenamiento masivo y la clase 1 subclase 1 indica una interfaz IDE [3].</p> <p>Las especificaciones para PCI no parecen ser p\u00fablicas - tienes que iniciar sesi\u00f3n en el sitio web de PCI-SIG para descargarlas. Sin embargo, alguien ha alojado el documento \"PCI Local Bus Specification\" de 2004 en su sitio web [4], por lo que pude verlo. En la p\u00e1gina 217, vemos:</p> <p>The Class Code register is read-only and is used to identify the generic function of the device and, in some cases, a specific registerlevel programming interface. The register is broken into three bytesize fields. The upper byte (at offset 0Bh) is a base class code which broadly classifies the type of function the device performs. The middle byte (at offset 0Ah) is a sub-class code which identifies more specifically the function of the device. The lower byte (at offset 09h) identifies a specific register-level programming interface (if any) so that device independent software can interact with the device. Encodings for base class, sub-class, and programming interface are provided in Appendix D. All unspecified encodings are reserved.</p> <p>Pues, eso significa que los tres bytes asignados para \"C\u00f3digo de Clase\" son de un byte, representando la clase base en la posici\u00f3n <code>0x0b</code>, subclase en <code>0x0a</code>, y interfaz de programaci\u00f3n en <code>0x09</code>. \u00a1Sencillo! Podemos analizar esos campos con este fragmento de c\u00f3digo:</p> <pre><code>pci_data = read_pci_port(bus, slot, function, 0x09);\ndevice.base_class = (pci_data &gt;&gt; 16) &amp; 0xff;\ndevice.sub_class = (pci_data &gt;&gt; 8) &amp; 0xff;\ndevice.prog_interface = pci_data &amp; 0xff;\n</code></pre> <p>Hice un poco de trampa por leer con un desplazamiento de <code>0x09</code> para ahorrar un poco de bitshifting. No estoy seguro si hay alg\u00fan impacto en el rendimiento por no leer en l\u00edmites de 4 bytes. Probablamente lo haya, pero para nuestros prop\u00f3sitos, \u00bfrealmente importa? Creo que no.</p>","tags":["c"]},{"location":"pkos-21/#intentos-de-usar-rust","title":"Intentos de usar Rust","text":"<p>Intent\u00e9 crear un kernel i386 multiboot utilizando Rust. Si hubiera tenido \u00e9xito, podr\u00eda haber enlazado todo el c\u00f3digo existente de C y ensamblador en ese ejecutable, \u00a1y cualquier nuevo desarrollo podr\u00eda haber sido en Rust! Desunafortunadamente, encontr\u00e9 algunos obst\u00e1culos en el camino.</p> <p>Una repuesta de StackOverflow por phip1611 [5] me inform\u00f3 que aunque no hay un objetivo integrado para el c\u00f3digo x86 de 32 bit sin sistema operativo, se puede definir un objetivo personalizado colocando un archivo JSON en la ra\u00edz del proyecto y se\u00f1alandolo en <code>.cargo/config.toml</code>. El uso de las macros <code>#![no_std]</code> y <code>#![no_main]</code> desactiva la biblioteca est\u00e1ndar y el m\u00e9todo principal, lo que permite la ejecuci\u00f3n en bare-metal.</p> <p>Tambi\u00e9n encontr\u00e9 un tutorial incre\u00edble llamado \"Writing an OS in Rust\" [6] que explicaba cada pieza del rompecabezas de manera muy clara. Sin embargo, todo el tutorial fue escrito para x86_64. Quiz\u00e1s se acerca el momento de actualizar PKOS, pero todav\u00eda no estoy listo para abandonar los 32 bits.</p> <p>Despu\u00e9s de lidiar con <code>xargo</code> durante un buen tiempo para la compilaci\u00f3n cruzada, finalmente decid\u00ed abandonar este enfoque, al menos por ahora.</p>","tags":["c"]},{"location":"pkos-21/#que-es-ide","title":"\u00bfQ\u00fae es IDE?","text":"<p>IDE (Integrated Drive Electronics) significa Electr\u00f3nica de Unidad Integrada. Es un est\u00e1ndar el\u00e9ctrico lanzado en 1990 para dispositivos de almacenamiento. Originalmente se conoc\u00eda como Advanced Technology Attachment (ATA), pero despu\u00e9s de la introducci\u00f3n de Serial ATA (SATA), fue renombrado como Parallel ATA (PATA) [7].</p> <p>Se puede identificar dispositivos IDE usando el campo C\u00f3digo de Clase en la memoria de configuraci\u00f3n PCI. OSDev wiki [8] nos dice:</p> <p>If the class code is 0x01 (Mass Storage Controller) and the subclass code is 0x01 (IDE), the device is an IDE controller.</p> <p>Esto se encarga de los dos primeros campos, pero \u00bfqu\u00e9 hay de ese molesto byte de la Interfaz de Programaci\u00f3n? Encontr\u00e9 informaci\u00f3n que indica que se utiliza para indicar si los dispositivos de almacenamiento primario y secundario son programables, as\u00ed como su modo de funcionamiento [9].</p> <p></p> Cr\u00e9ditos de la foto: [9] <p>Encontr\u00e9 la especificaci\u00f3n para una tarjeta PCI IDE en l\u00ednea, y me alegraba mucho ver que los c\u00f3digos de clase eran exactamente como ya vimos en nuestras investigaciones:</p> <p></p> Cr\u00e9ditos de la foto: [11] <p>Otro recurso potencialmente \u00fatil fue una gu\u00eda para escribir un controlador de IDE de la documentaci\u00f3n del sistema operativo en tiempo real RTEMS [12]. Tambi\u00e9n pude encontrar el c\u00f3digo fuente en GitHub [13]. Parece que el controlador ATA en <code>ata.c</code> utiliza las functiones (quiz\u00e1s) de nivel inferior en <code>ide_controller.c</code>, pero no estoy completamente seguro.</p> <p>RTEMS proporciona una gu\u00eda distinta para escribir un controlador de ATA [16]. OSDev tambi\u00e9n tiene una gu\u00eda [17]. Esto me confunde un poco, porque el art\u00edculo de TechTarget [7] parece indicar que ATA e IDE son b\u00e1sicalmente intercambiables.</p>","tags":["c"]},{"location":"pkos-21/#que-es-sata","title":"\u00bfQu\u00e9 es SATA?","text":"<p>SATA significa Serial Advanced Technology Attachment, definido, como se indic\u00f3 anteriormente, en contraste con IDE/PATA. AHCI (Advanced Host Controller Interface) significa Interfaz de Controlador de Host Avanzada. He visto estos dos acr\u00f3nimos utilizados indistintamente en algunos de los controladores que vi en l\u00ednea. Sin embargo, Dell indica que puede ser m\u00e1s complicado admitir un dispositivo AHCI que un dispositivo SATA [11]. </p> <p></p> Cr\u00e9ditos de la foto: TechTarget [7]","tags":["c"]},{"location":"pkos-21/#agregando-sata-a-qemu","title":"Agregando SATA a QEMU","text":"<p>Una repuesta de StackOverflow por mwfearnley [14] explica c\u00f3mo agregar explicitamente un dispositivo SATA a QEMU:</p> <pre><code>-drive id=disk,file=IMAGE.img,if=none \\\n-device ahci,id=ahci \\\n-device ide-hd,drive=disk,bus=ahci.0\n</code></pre> <p>Agregu\u00e9 estas lineas a los m\u00e9todos <code>run</code> y <code>run_debug</code> del gui\u00f3n <code>os.py</code> y, como ya puedes ver, \u00a1la unidad SATA apareci\u00f3 en <code>lspci</code>! Se encuentra en el Bus 0, Dispositivo 4, Funci\u00f3n 0 en la imagen a continuaci\u00f3n:</p> <p></p> <p>Ruben Schade destac\u00f3 una t\u00e9cnica similar para agregar la unidad en su blog [15]. Tambi\u00e9n parece que ser\u00eda bastante agregar <code>-hda IMAGE.img</code> al comando de QEMU, pero lo hice de la manera complicada al principio y funcion\u00f3 bien, y por eso me qued\u00e9 con eso.</p>","tags":["c"]},{"location":"pkos-21/#conclusion","title":"Conclusi\u00f3n","text":"<p>Aunque no logr\u00e9 tanto como quer\u00eda en este episodio, todav\u00eda hice progreso y aprend\u00ed mucho. \u00a1Espero que t\u00fa tambi\u00e9n disfrutaste y aprendiste!</p> <p>Los pr\u00f3ximos pasos para este proyecto probablamente implicar\u00e1n crear alg\u00fan tipo de controlador SATA, pero por lo que he visto hasta ahora, me intimida un poco lo complejo que puede ser. \u00a1Veremos c\u00f3mo van las cosas!</p> <p>Si disfrutaste esta publicaci\u00f3n, considera suscribirte al canal de YouTube de PageKey Espa\u00f1ol</p>","tags":["c"]},{"location":"pkos-21/#referencias","title":"Referencias","text":"<p>[1]: M\u00e9todo del Linux kernel \"early_dump_pci_devices\" comprobando si el dispositivo existe usando el campo de clase. https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/arch/x86/pci/early.c?id=refs/tags/v3.12.7#n96</p> <p>[2]: OSDev p\u00e1gina de PCI. https://wiki.osdev.org/PCI</p> <p>[3]: Sitio que muestra los campos de PCI de clase y subclase. https://pci-ids.ucw.cz/read/PD/</p> <p>[4]: PCI Local Bus Specification de 2004. https://lekensteyn.nl/files/docs/PCI_SPEV_V3_0.pdf</p> <p>[5]: Objetivo x86 de bare-metal x86 en Rust, gracias a phip1611. https://stackoverflow.com/questions/67902309/how-to-compile-rust-code-to-bare-metal-32-bit-x86-i686-code-what-compile-targ</p> <p>[6]: Writing an OS in Rust: https://os.phil-opp.com/freestanding-rust-binary/</p> <p>[7]: TechTarget descripci\u00f3n de alto nivel de las interfaces PATA y SATA. https://www.techtarget.com/searchstorage/definition/IDE</p> <p>[8]: Art\u00edculo de OSDev PCI IDE Controller. https://wiki.osdev.org/PCI_IDE_Controller</p> <p>[9]: Especificaci\u00f3n del Controlador PCI IDE. http://www.isdaman.com/alsos/hardware/hdc/pciide.pdf</p> <p>[10]: Ejemplo de especificaci\u00f3n del proveedor de una tarjeta controladora PCI IDE. https://pdf.dzsc.com/PC8/PC87410.pdf</p> <p>[11]: Art\u00edculo de Dell sobre SATA vs AHCI. https://www.dell.com/support/kbdoc/en-us/000127508/difference-between-ahci-and-sata</p> <p>[12]: Gu\u00eda de RTEMS para controladores de PCI IDE. https://docs.rtems.org/branches/master/bsp-howto/ide_controller.html</p> <p>[13]: Implementaci\u00f3n de referencia del controlador PCI IDE de RTEMS. https://github.com/RTEMS/rtems/tree/master/bsps/shared/dev/ide</p> <p>[14]: StackOverflow sobre c\u00f3mo agregar una unidad SATA a QEMU. https://stackoverflow.com/questions/48351096/how-to-emulate-a-sata-disk-drive-in-qemu</p> <p>[15]: Ruben Schade sobre agregar una unidad SATA a QEMU. https://rubenerd.com/sata-on-qemu/</p> <p>[16]: RTEMS ATA driver guide. https://docs.rtems.org/branches/master/bsp-howto/ata.html</p> <p>[17]: OSDev ATA driver. https://github.com/levex/osdev/blob/master/drivers/ata.c</p>","tags":["c"]},{"location":"archive/2023/","title":"2023","text":""},{"location":"archive/2022/","title":"2022","text":""},{"location":"category/pagekey-operating-system/","title":"PageKey Operating System","text":""},{"location":"category/boom-languages/","title":"Boom Languages","text":""},{"location":"category/9-dias-de-codigo/","title":"9 D\u00edas de C\u00f3digo","text":""},{"location":"page/2/","title":"Blog","text":""},{"location":"tags/","title":"Etiquetas","text":""},{"location":"tags/#etiquetas","title":"Etiquetas","text":""},{"location":"tags/#c","title":"c","text":"<ul> <li>OS21: M\u00e1s PCI + Empezando con Almacenamiento (IDE, SATA)</li> </ul>"},{"location":"tags/#javascript","title":"javascript","text":"<ul> <li>Primera Aplicaci\u00f3n Web con Flask</li> <li>\u00bf\u00bfFlask se encuentra con html??</li> <li>Fijamos Errores, Ponemos Estilo</li> <li>5 Lecciones de 4 Reescrituras de mi Aplicaci\u00f3n de Idiomas | Boom DevLog 9</li> </ul>"},{"location":"tags/#language","title":"language","text":"<ul> <li>5 Lecciones de 4 Reescrituras de mi Aplicaci\u00f3n de Idiomas | Boom DevLog 9</li> </ul>"},{"location":"tags/#python","title":"python","text":"<ul> <li>Descargamos una P\u00e1gina Web con Python</li> <li>Usamos una API Para Saber Mi Edad</li> <li>Terminamos Nuestra Aplication Terminal</li> <li>Primera Aplicaci\u00f3n Web con Flask</li> <li>\u00bf\u00bfFlask se encuentra con html??</li> <li>Finalmente tenemos los datos de la API</li> <li>Fijamos Errores, Ponemos Estilo</li> </ul>"}]}