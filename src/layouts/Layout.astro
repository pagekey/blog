---
import '~/assets/styles/tailwind.css';

import { I18N } from 'astrowind:config';

import CommonMeta from '~/components/common/CommonMeta.astro';
import Favicons from '~/components/Favicons.astro';
import CustomStyles from '~/components/CustomStyles.astro';
import ApplyColorMode from '~/components/common/ApplyColorMode.astro';
import Metadata from '~/components/common/Metadata.astro';
import SiteVerification from '~/components/common/SiteVerification.astro';
import Analytics from '~/components/common/Analytics.astro';
import BasicScripts from '~/components/common/BasicScripts.astro';

// Uncomment line below to activate View Transitions
// import { ViewTransitions } from 'astro:transitions';

import type { MetaData as MetaDataType } from '~/types';

export interface Props {
  metadata?: MetaDataType;
}

const { metadata = {} } = Astro.props;
const { language, textDirection } = I18N;
---

<!doctype html>
<html lang={language} dir={textDirection} class="2xl:text-[20px]">
  <head>
    <CommonMeta />
    <Favicons />
    <CustomStyles />
    <ApplyColorMode />
    <Metadata {...metadata} />
    <SiteVerification />
    <Analytics />

    <!-- Uncomment line below to activate View Transitions -->
    <!-- <ViewTransitions fallback="swap" /> -->
  </head>

  <body class="antialiased text-default bg-page tracking-tight">
    <slot />

    <BasicScripts />

    <style is:global>
      img {
        content-visibility: auto;
      }
    </style>
      <script>
        // Source: https://github.com/JuanM04/portfolio/blob/983b0ed0eabdac37bf8b7912d3e8128a443192b9/src/pages/docs/%5B...documentSlug%5D.astro#L74-L103
        // From this comment: https://github.com/withastro/astro/issues/4433#issuecomment-1584019991
        /**
         * @params {HTMLCollectionOf<HTMLElement>} graphs
         */
        async function renderDiagrams(graphs) {
          const {default: mermaid} = await import("mermaid")
          mermaid.initialize({
            startOnLoad: false,
            fontFamily: "var(--sans-font)",
            // @ts-ignore This works, but TS expects a enum for some reason
            theme: window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "default",
          })
    
          for (const graph of graphs) {
            const content = graph.querySelector(".mermaid-src").innerText
            if (!content) continue
            let svg = document.createElement("svg")
            const id = (svg.id = "mermaid-" + Math.round(Math.random() * 100000))
            graph.appendChild(svg)
            mermaid.render(id, content).then(result => {
              graph.innerHTML = result.svg
            })
          }
        }
    
        const graphs = document.getElementsByClassName("mermaid")
        if (document.getElementsByClassName("mermaid").length > 0) {
          renderDiagrams(graphs);
        }
      </script>
  </body>
</html>
